===== CLEANING =====
- Is the fact having the pair update/draw a bad thing or it is the implementation
  of them in the same class the bad thing?
- Comment some things
- Use DP Component for MapObject
	=> Break inheritance
		-> Break Movable into components:
			* MovementComponent  => Works exactly like Movable, using Movements
			* CollisionComponent => Use collision handlers, like Movable
		-> Merge Battler and Enemy into components:
			* Battler would become 'BattleComponent'
			* Enemy would be broken into the parts needing it
	=> Go further
		-> Break inheritance for Map/AnimatedMap/TileMap/XMLTileMap
			* AnimatedMap becomes AnimationComponent (maybe used by Sprite?)
			* TileMap becomes MapDisplayComponent
			* XMLTileMap will be merged to MapLoader, which becomes TileMapLoader
			* Map becomes Scene
				~ Break MapObject into a PositionComponent
				~ Find a way to represent any Entity by a single ID
					~> Maybe use two dimensional arrays?
					   The first layer is the Entity ID
					   The second one is the Components for this Entity
					~> So we must have component subtypes, to handle them easily
						> GameLogicComponent or UpdateComponent
						> DisplayComponent
						> ConditionalComponent, this Component would be useful
						  for things like reset() (variadic constructor, virtual
						  function testCondition(), that sort of things...)
			            > Good, Scene now handles pack of components
			* Since entities doesn't exist anymore, something must give an
			  access to current Scene class
				~ Use a static pointer to current Scene object, like Map
			* The old map will be a particular entity
- Implement GamePad (implemented in 'rewrite' branch)
- A unique view for maps (Map::view)
	=> Model matrix

===== TODO =====
- Finish 'Octorok'
	=> Player can go through enemies sometimes
	=> Add 'Projectile' class
	=> Implement projectiles for octorok
	=> Clean
- Finish 'NPC'
	=> Player can't move on the side when it collides an NPC
- Improve 'Dialog' and 'DialogState'
	=> Maybe rewrite it?
- Remove sword loading animation, and replace it by palette switch
- Implement EnemyLoader with 'data/config/enemies.xml'
- Implement 'Translator'
	=> Like Asylia LanguageManager
- Add 'player.xml' config file in 'data/config/' directory
- Add 'MovableObject', then 'PotObject' and 'BlockObject'
	=> Movable contains the object movement thing
	=> Pot is a Movable in all ways
	=> Block can be moved once only, or not at all, and requires the way it can be move
- Add 'PowerBracelet', child of 'Weapon'
	=> Add 'LiftableObject'
		-> 'PotObject' and 'GrassObject' inherits from it
	=> Add 'LiftingState' for Player
- Improve OpenGL code
	=> Write a class VertexArray, and use it in 'Image' and 'Rectangle'
- Implement a game pad (movable and resizable via config files?)
- Improve game for OpenGL ES and try on Android
- Write a little game editor with Qt
	=> Add maps
		~> Add objects
		~> Add collectables
		~> Add enemies
		~> Add NPCs

===== ISSUES =====
- Player can go through enemies sometimes
- Player can be pushed out of the map during HurtMovement
- Octorok's HurtMovement speed too slow?
- Improve palette system
- Improve collectable objets drop movement
- Rupees are added one by one to the counter in the original game
	=> There's also a sound effect
- Lines have not the correct length in 'Dialog'
	=> Maybe related to the 'Ã '?
- When a color tag starts on one line and finishes on another one, the other line doesn't have color
- Check sound effect channels in real game
	=> For example, is it possible to hear sword loading sound anymore when link releases spin attack?
	=> It's not possible to hear text 'clicks' during 'tadaaaaaaa' (new item)
	=> Define channel in constructor (and 'load'), so from Sound.cpp
- Fix grassDestroy animation
	=> Find a way to rip it
- Fix 'moonwalk' bug
